1. add()
Adds an element to the set.
Syntax: set.add(element)
Example:
python
Copy
Edit
s = {1, 2, 3}
s.add(4)
print(s)  # {1, 2, 3, 4}
2. update()
Adds multiple elements from an iterable (list, tuple, set, etc.).
Syntax: set.update(iterable)
Example:
python
Copy
Edit
s = {1, 2, 3}
s.update([4, 5, 6])
print(s)  # {1, 2, 3, 4, 5, 6}
3. remove()
Removes a specific element from the set.
Raises a KeyError if the element is not found.
Syntax: set.remove(element)
Example:
python
Copy
Edit
s = {1, 2, 3}
s.remove(2)
print(s)  # {1, 3}
4. discard()
Removes a specific element, but does not raise an error if the element is missing.
Syntax: set.discard(element)
Example:
python
Copy
Edit
s = {1, 2, 3}
s.discard(2)
s.discard(10)  # No error even if 10 is not in the set
print(s)  # {1, 3}
5. pop()
Removes and returns a random element from the set.
Raises a KeyError if the set is empty.
Syntax: set.pop()
Example:
python
Copy
Edit
s = {1, 2, 3}
print(s.pop())  # Might remove any element randomly
print(s)  # Remaining elements
6. clear()
Removes all elements from the set, making it empty.
Syntax: set.clear()
Example:
python
Copy
Edit
s = {1, 2, 3}
s.clear()
print(s)  # set()
7. intersection_update()
Keeps only elements that are in both sets.
Syntax: set.intersection_update(iterable)
Example:
python
Copy
Edit
s1 = {1, 2, 3, 4}
s1.intersection_update({2, 3, 5})
print(s1)  # {2, 3}
8. difference_update()
Removes elements found in another set.
Syntax: set.difference_update(iterable)
Example:
python
Copy
Edit
s1 = {1, 2, 3, 4}
s1.difference_update({3, 4})
print(s1)  # {1, 2}
9. symmetric_difference_update()
Keeps only elements that are unique to each set (removes common elements).
Syntax: set.symmetric_difference_update(iterable)
Example:
python
Copy
Edit
s1 = {1, 2, 3, 4}
s1.symmetric_difference_update({3, 4, 5, 6})
print(s1)  # {1, 2, 5, 6}
10. union_update() (Not an official method)
Python does not have a union_update(), but update() works like it.
Equivalent to: s1 = s1 | s2
Summary Table:
Method	Description	Raises Error If Absent?
add()	Adds an element	No
update()	Adds multiple elements	No
remove()	Removes a specific element	Yes
discard()	Removes a specific element	No
pop()	Removes a random element	Yes (if empty)
clear()	Empties the set	No
intersection_update()	Keeps only common elements	No
difference_update()	Removes elements found in another set	No
symmetric_difference_update()	Keeps only unique elements	No